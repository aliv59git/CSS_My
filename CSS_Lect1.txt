

Записки по лекцията 1 за CSS - 27.04.2015 г. Дончо Минков


Препроцесорите Less, Sass, Style, 

Тук едно нещо може да се направи по много различни начини. Важно е да проверяваме домашни. 

Изпита: HTML- няма да го променяме. Да го стилизираме. до получаване на 1 или няколко картинки. 

Ще има няколко картинки. една без промяна и другите с hover върху отванящото се меню. 

Трябва да е 1:1  всичко имплементирано така че да е Пиксел пърфект на един браузър. Трябва да е същия цвят и до пиксел същия по размер. „

При фронт.-енд курсовете - на всички браузъри да е Пиксел- пърфект. Препроцесорите - можем да използваме. 

Ресурси: 

MDN= за учене на Web Platform CSS - Reference, Tutorial, Dema, ;

https://docs.webplatform.org/wiki/css

SublimeText, WebStrom, VisualStudio.

За домашните :  необходими са само .html, css, js,  и това е също изображения. Това е задължителното. Не трябва .sln  да се пращат целите. 

a{text} tab - дава текста като съдържание на таговете, използвани при съкратеното въвеждане на тагове. 

Зако каскадни. Стиловете се наследяват. Има значение как селектираме. Някои се наследяват. Цвят, Стилизирайки нещо на родителя, получават го и наследниците. 

Селектор - стилът се прилага за всички тагове, които са поставени. След всяка декларация слагаме ; задължително!!!

Имаме три вида селектори. 

- Селектор по тип на тага

- Селектор по клас - Когато искаме да селектираме няколко елемента с този клас. 

- Селектор по id; Когато селектираме точно един елемент

Със , можем да изреждаме не само тагове, но и други селектори: класове, и др. 

Нестет селектори. 

div p {} прилага се за всички селектори p, намиращи се в div. Нищо, че има други междинни тагове между div и  p  независимо колко навътре е р. 

div>p  селектира всички р, които имат директен родител div. 

zen coding    го прекръстиха в  emet coding

има и +  - маркира ни елементът, който е след предишния елемент. от същия тип/ранг

display: none; - скрива се но е там. 

* - селектира всичко  - не се използва много

* :hover 

Браузърът изпълнява селекторите отдясно наляво. Добре е най-десния селектор да е клас или id;

Има комплексни селектори. 

" " (space) e невалиден символ за клас. приема и двете имена. като класове. 

.first.second селектира тези които имат и двата класа 

type selectora да е първи.  

Поставяне ин лайн. в тага стила - не е добре. Стайл атрибутът се използва с JS 

Ембедване през <style> тага. 

<link rel ="stylesheet" type="text/css" href = "styles.css" />  - така се добавя в head - тага. Така css файла се кешира, по-бързо работи. 

http://www.csszengarden.com/216/

bootstrap CDN 

Първо се стилизират всички html  елементи. 

Освен <link>  има и други начини за ембедване на css. 

@import url("styles.css") при файлове с различен css се аплайва последния. 

a[title] - атрибут селектор. а имащ този атрибут. 
  
a[title = very]{}  селектира по опр. атрибути. 
a[title*=.....]
a[title^=..........]
a[title$=.....]

в името ако има space - трябва да е в кавички. 

Псевдо селектори :......

:hover,   - може да го приложи върху 1 елемент или върху групата над този елемевнт или още по-нагоре 

:visited, :first-line  - прилага се само върху първата линия независимо от размера на прозореца.   :active  :lang

:first-letter  :before   :after     a: after{
 content = ',';
 }   аналогично при :before 

Structural Pseudo classes, 

ul li : nth-of-type(2n)
(2n+1)  може и с различна формула да се прилага. 

nth-last-of-type   nth -child   

При радиобутоните name = "radios[]" по конвенция  да e с []

Е ~   - дай ми родителите на елемента

Цветове хексадецимал и децимал. rgb(255 255 255) децимал
#hexadeciaml     rgba - a - видимост от 0 до 1.

Трябва да внимаваме със стиловете наготово, които ни идват от браузърите. Да ги нулираме в началото на CSS  файла. 

body, li, p, div, padding margin, .....reset

# - 100   . - 10  tag - 1  *-0;  тежест на селекторите. 

selector wars - за приоритетите на селекторите. 

! important - дава 1000000 приоритет на съответния селектор.





Записки по лекцията на Дончо 29.04.15 CSS presentation

Стилизиране на тест цвят, размер вид на цвета. font-family. 

- color: # 000 черен цвят. fff  бял  Цвета се наследява. 

- font-size:  /Също се наследява Добре е да го дадем, тъй като на различните браузъри е различно. дефолтния сайз.

Добрата практика е да зададем някакъв фонт сайз и другите да са с em: 1.4em,  2.5 em. Ако имаме само em- лесно може да го променяме с основния размер на фонта.  Дофолтния го задаваме като font-size на body. 

Ако не го зададем, от браузъра идват дефолтните стойности. 

Освен em имаме rem  При вътрешни елементи с пропорционално растене на шрифта, rem запазва големината без скалиращо уголемяване. „

Да даваме размера в px а да избягваме x-large, xx-large small.....xx-small  и т.н. 

Когато задаваме font-family да задаваме няколко шрифта. 

- font-weight: 100 - 900 - през 100.  Тук може да даваме bold, bolder ... 

Визуално повечето шрифтове имат 2 или 3 удебелявания видими на екрана. 

Затова тук се използват  -  normal, bold, light 

- font-style:  normal, italic;  strong и em са тагове които са семантични, но не винаги ги използваме тях. 

Ако искаме да наблягаме strong а не винаги bold. Наблягането може да бъде и с друг цвят, 

- text-decoration: blink - да не се използва защото дразни обикновено. Не се поддържа на всички браузъри. 
underline; line-through, double-underline, none, При ресет в началото на css - text-decoration: none;

a: hover - тогава да се вижда. 

-  text-align:  left, right, justify, center
- font-variant : normal, 

- line-height: - височина на линията.  
font-style
font-variant
font-weight;
font-size;
font-height;
font-family  в този ред при задаване наведнъж на шрифта:
 
font: italic normal normal 16/18 Verdana

Можем да си генерираме наш фонд. 
@font-face{
 font-family: SketchRockwell;
 src: url('SketckRockwell-Bold.ttf')
 font-size;
}
В Google  си търсим фонтове -->  google fonts 

По аналогичен начин си търсим и поставяме фонтове

- text-shadow - 15px 10px 1px #.....   "-" сянката отива нагоре. иначе е надолу. надясно

horizontal - vertical - blur-radius - shadow - color

- text overflow: ellipsis/clip   Едното реже текста, слага ... , другото го скрива.   

- word-wrap: normal/break-word; 

Borders

border-width
border-color
border-style: hidden, none, dotted, dashed, solid, double, groove, ridge, inset, outset. 
 Използва се при бутончета. Ако искаме преливка на цветовете правим три или повече дива, и всеки си има съответния цвят. Така се постига ефекта. 

Ако искаме да махнем бордера - border: none; border: 0; Може и двете, но се използва последното. 

Градиенти 

border: 8px 
-moz-box-bottom-colors: .......#.. #...#...#;
-wiebkit-box....
-box-shadow: ....
префикси. за различните браузъри. 

border-radius: 30px;  - заобляне на правоъгълничето. 



Продължение на лекцията на Дончо 29.04.15 г.

При бордерите:
 white-space: 
overflow: hidden;
text-overflow: ellipsis;

Background

background-color: lightblue;
background-image: url("node.png")

background-repeat: repeat-x/repeat-y/repeat;

background-attachment: scroll;  Изображението от бекграунда остава, докато текста се скролва. 

background-position:  10px 50px  отдясно и отгоре. 

Когато картинката е част от съдържанието - лого, в презентация и др. се прави с image но ако е за стилизиране, - картинката се слага в background-image.

Спрайт - 4 картинки, слагат се в една. След това се ползват за background-image;
Изрязва се картинката която ни трябва и се позиционира- Става автоматизирано. нареждането им в един спрайт -. една картинка, и после цялото влиза в бекграунда. 

Градиенти

background: linear-gradient(to bottom, black, 50 %, yellow, ......);   това е синтаксиса. 
могат да се дават много цветове, да се дават проценти и т.н. Може да имаме поне 2 цвята 

На браузърите се поддържа по различен начин. CSS Gradient Generator.

Селектираме 1 пиксел в която копираме това като картинка. 

В Градиент генератора - вкарваме долу в дясно нашата картинка. и от нея може да прави градиент. 
в import from image; Горе може да сложим размер. в Градиент Генератора. Ако искаме да разпънем един градиент само без background-repeat.

Multiple background

Opacity; Работи като alpha - канала.  за цвят. 
Ако има нестване - то се натрупва. 0.5 * 0.5 например 

при opacity: 0;  си заема мястото, но не се вижда. 

Не работи на всички браузъри но префикса е лесен: 
-o-opacity: 

zoom: 1;   поставя се за да се изпълни  тази функция, за да се изпълни Поставя се накрая
за да работи 




